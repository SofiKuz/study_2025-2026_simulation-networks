---
## Front matter
title: "Отчёт по лабораторной работе №1"
subtitle: "дисциплина: Моделирование сетей передачи данных"
author: "Студент: Кузнецова София Вадимовна"

## Generic otions
lang: ru-RU
toc-title: "Содержание"

## Bibliography
bibliography: bib/cite.bib
csl: pandoc/csl/gost-r-7-0-5-2008-numeric.csl

## Pdf output format
toc: true # Table of contents
toc-depth: 2
lof: true # List of figures
lot: true # List of tables
fontsize: 12pt
linestretch: 1.5
papersize: a4
documentclass: scrreprt
## I18n polyglossia
polyglossia-lang:
  name: russian
  options:
	- spelling=modern
	- babelshorthands=true
polyglossia-otherlangs:
  name: english
## I18n babel
babel-lang: russian
babel-otherlangs: english
## Fonts
mainfont: PT Serif
romanfont: PT Serif
sansfont: PT Sans
monofont: PT Mono
mainfontoptions: Ligatures=TeX
romanfontoptions: Ligatures=TeX
sansfontoptions: Ligatures=TeX,Scale=MatchLowercase
monofontoptions: Scale=MatchLowercase,Scale=0.9
## Biblatex
biblatex: true
biblio-style: "gost-numeric"
biblatexoptions:
  - parentracker=true
  - backend=biber
  - hyperref=auto
  - language=auto
  - autolang=other*
  - citestyle=gost-numeric
## Pandoc-crossref LaTeX customization
figureTitle: "Рис."
tableTitle: "Таблица"
listingTitle: "Листинг"
lofTitle: "Список иллюстраций"
lolTitle: "Листинги"
## Misc options
indent: true
header-includes:
  - \usepackage{indentfirst}
  - \usepackage{float} # keep figures where there are in the text
  - \floatplacement{figure}{H} # keep figures where there are in the text
---

# Цель работы

Основной целью работы является развёртывание в системе виртуализации(например, в VirtualBox) mininet, знакомство с основными командами для работы с Mininet через командную строку и через графический интерфейс.
 
# Выполнение лабораторной работы

Перейдем в репозиторий Mininet, скачаем актуальный релиз ovf-образа виртуальной машины. Запустим систему виртуализации и импортируем файл .ovf и укажем параметры импорта.

![Импорт конфигураций](image/1.png){ #fig:001 width=100% height=100% }

![Параметры импорта](image/2.png){ #fig:002 width=100% height=100% }

Перейдем в настройки системы виртуализации и уточним параметры настройки виртуальной машины. В частности, для VirtualBox выберем импортированную виртуальную машину и перейдите в меню “Машина -> Настроить”. Перейдем к опции «Система». Если внизу этого окна есть сообщение об обнаружении неправильных настроек, то, следуя рекомендациям, внесем исправления (изменим тип графического контроллера на рекомендуемый). В настройках сети первый адаптер должен иметь подключение типа NAT. Для второго адаптера укажите тип подключения host-only network adapter
(виртуальный адаптер хоста), который в дальнейшем вы будете использовать для входа в образ виртуальной машины.

![Настройка сети](image/3.png){ #fig:003 width=100% height=100% }

![Настройка сети](image/41.png){ #fig:041 width=100% height=100% }

![Настройка сети](image/42.png){ #fig:042 width=100% height=100% }

Запустим виртуальную машину с Mininet. Залогинимся в виртуальную маши-
ну: - login: mininet - password: mininet. Посмотрите адрес машины с помощью ifconfig.

![Запуск mininet](image/51.png){ #fig:001 width=100% height=100% }

Подключимся к виртуальной машине (из терминала хостовой машины). Настроем ssh-подсоединение по ключу к виртуальной машине. Вновь подключимся к виртуальной машине и убедимся, что подсоединение происходит успешно и без ввода пароля.

![Подключение к mininet через SSH](image/5.png){ #fig:005 width=100% height=100% }

![Подключение к mininet через SSH](image/6.png){ #fig:006 width=100% height=100% }

После подключения к виртуальной машине mininet посмотрим IP-адреса машины. Активен только внутренний адрес машины вида 192.168.x.y, поэтому активируем второй интерфейс.

![Просмотр IP-адресов машины](image/7.png){ #fig:007 width=100% height=100% }

Для удобства дальнейшей работы добавим для mininet указание на использование двух адаптеров при запуске. Для этого требуется перейти в режим суперпользователя и внести изменения в файл /etc/netplan/01- netcfg.yaml виртуальной машины mininet. В результате файл /etc/netplan/01-netcfg.yaml должен иметь следующий вид.

![Файл /etc/netplan/01-netcfg.yaml](image/8.png){ #fig:008 width=100% height=100% }

В виртуальной машине mininet переименуем предыдущую установку Mininet. Скачаем новую версию Mininet. Обновим исполняемые файлы.

![Обновление Mininet](image/9.png){ #fig:009 width=100% height=100% }

Проверим номер установленной версии mininet.

![Номер установленной версии mininet](image/10.png){ #fig:010 width=100% height=100% }

При попытке запуска приложения из-под суперпользователя возникает ошибка: X11 connection rejected because of wrong authentication. Ошибка возникает из-за того, что X-соединение выполняется от имени пользователя mininet, а приложение запускается от имени пользователя root с использованием sudo. Для исправления этой ситуации необходимо заполнить файл полномочий /root/.Xauthority, используя утилиту xauth. Скопируем значение куки (MIT magic cookie)1 пользователя mininet в файл для пользователя root.

![Настройка соединения X11 для суперпользователя](image/11.png){ #fig:011 width=100% height=100% }

Для запуска минимальной топологии введем в командной строке: sudo mn. Эта команда запускает Mininet с минимальной топологией, состоящей из коммутатора, подключённого к двум хостам. Для отображения списка команд интерфейса командной строки Mininet и примеров их использования введем команду в интерфейсе командной строки Mininet: help Для отображения доступных узлов введем: nodes Вывод этой команды показывает, что есть два хоста (хост h1 и хост h2) и коммутатор (s1). Иногда бывает полезно отобразить связи между устройствами в Mininet, чтобы понять топологию. Введем команду net в интерфейсе командной строки Mininet, чтобы просмотреть доступные линки: net Вывод этой команды показывает: - Хост h1 подключён через свой сетевой интерфейс h1-eth0 к коммутатору на интерфейсе s1-eth1. - Хост h2 подключён через свой сетевой интерфейс h2-eth0 к коммутатору на интерфейсе s1-eth2. - Коммутатор s1: - имеет петлевой интерфейс lo. - подключается к h1-eth0 через интерфейс s1-eth1. - подключается к h2-eth0 через интерфейс  s1-eth2.

![Работа с Mininet с помощью командной строки](image/12.png){ #fig:012 width=100% height=100% }

Mininet позволяет выполнять команды на конкретном устройстве. Чтобы выполнить команду для определенного узла, необходимо сначала указать устройство, а затем команду, например: h1 ifconfig Эта запись выполняет команду ifconfig на хосте h1 и показывает интерфейсы хоста h1 — хост h1 имеет интерфейс h1-eth0, настроенный с IP-адресом 10.0.0.1, и другой интерфейс lo, настроенный с IP-адресом 127.0.0.1.

![Работа с Mininet с помощью командной строки](image/13.png){ #fig:013 width=100% height=100% }

Посмотрим конфигурацию всех узлов.

![Работа с Mininet с помощью командной строки](image/141.png){ #fig:141 width=100% height=100% }

![Работа с Mininet с помощью командной строки](image/142.png){ #fig:142 width=100% height=100% }

По умолчанию узлам h1 и h2 назначаются IP-адреса 10.0.0.1/8 и 10.0.0.2/8 соответственно. Чтобы проверить связь между ними, используем команду ping. Команда ping работает, отправляя сообщения эхо-запроса протокола управляющих сообщений Интернета (ICMP) на удалённый компьютер и ожидая ответа.Например, команда h1 ping 10.0.0.2 проверяет соединение между хостами h1 и h2.

![Проверка связности хостов](image/15.png){ #fig:015 width=100% height=100% }

Очистим предыдущий экземпляр Mininet.

![Очистка предыдущего экземпляра Mininet](image/16.png){ #fig:016 width=100% height=100% }

По умолчанию XTerm использует растровые шрифты малого кегля. Для увеличения размера шрифта и применения векторных шрифтов вместо растровых необходимо внести изменения в файл /etc/X11/app-defaults/XTerm. Для этого можно воспользоваться следующей командой: sudo mcedit /etc/X11/app-defaults/XTerm и затем в конце файла добавить строки: xtermfaceName: Monospace, xtermfaceSize: 12 Здесь выбран системный моноширинный шрифт, кегль шрифта — 12 пунктов.

![Настройка параметров XTerm](image/17.png){ #fig:017 width=100% height=100% }

Запустим Xserver. Выберем опции: multiple windows, display number: -1, start no client. Сохраним параметры, тогда при следующем запуске не нужно будет отмечать эти опции.

![Запуск и настройка Xserver](image/18.png){ #fig:018 width=100% height=100% }

Запустим putty. При подключении добавим опцию перенаправления X11.

![Запуск и настройка Xserver](image/19.png){ #fig:019 width=100% height=100% }

![Запуск putty и добавление опции перенаправления X11](image/20.png){ #fig:020 width=100% height=100% }

В терминале виртуальной машины mininet запустим MiniEdit: sudo~/mininet/mininet/examples/miniedit.py. Добавим два хоста и один коммутатор, соединим хосты с коммутатором. Настроим IP-адреса на хостах h1 и h2. Для этого удерживая правую кнопку мыши на устройстве выберем свойства. Для хоста h1 укажем IP-адрес 10.0.0.1/8, а для хоста h2— \10.0.0.2/8.

![Добавление двух хостов и одного коммутатора](image/21.png){ #fig:021 width=100% height=100% }

![Настройка IP-адреса на хостах](image/22.png){ #fig:022 width=100% height=100% }

Перед проверкой соединения между хостом h1 и хостом h2 необходимо запустить эмуляцию. Для запуска эмуляции нажмём кнопку Run. После начала эмуляции кнопки панели MiniEdit стали серыми, указывая на то, что в настоящее время они отключены. Откроем терминал на хосте h2. На терминале хоста h1 введём команду ifconfig, чтобы отобразить назначенные ему IP-адреса. Интерфейс h1-eth0 на хосте h1 настроен с IP-адресом 10.0.0.1 и маской подсети 255.0.0.0.Повторим этидействия на хосте h2. Его интерфейс h2-eth0 настроен с IP-адресом 10.0.0.2 и маской подсети 255.0.0.0. Проверим соединение между хо19стами, введя в терминале хоста h2 команду ping 10.0.0.1. Для остановки теста нажмём Ctrl + c. Остановим эмуляцию, нажав кнопку Stop.

![Проверка назначенных IP-адресов для h2 и проверка соединения между хостами](image/231.png){ #fig:231 width=100% height=100% }

![Проверка назначенных IP-адресов для h2 и проверка соединения междухостами](image/232.png){ #fig:232 width=100% height=100% }

Ранее IP-адреса узлам h1 и h2 были назначены вручную. В качестве альтернативы можно полагаться на Mininet для автоматического назначения IP-адресов.Для этого удалим назначенный вручную IP-адрес с хостов h1 и h2. В MiniEdit нажмём Edit Preferences. По умолчанию в поле базовые значения IP-адресов (IP Base) установлено 10.0.0.0/8. Изменим это значение на 15.0.0.0/8. Затем запустим эмуляцию, нажав кнопку Run.

![Проверка автоматического назначения адресов](image/24.png){ #fig:024 width=100% height=100% }

Откроем терминал на хосте h1, удерживая правую кнопку мыши на хосте h1 и выбрав Terminal. Отобразим IP-адреса, назначенные хосту h1.Интерфейс h1- eth0 на узле h1 теперь имеет IP-адрес 15.0.0.1 и маску подсети 255.0.0.0.

![Отображение IP-адреса, назначенного хосту h1](image/251.png){ #fig:251 width=100% height=100% }

![Отображение IP-адреса, назначенного хосту h1](image/252.png){ #fig:252 width=100% height=100% }

В домашнем каталоге виртуальной машины mininet создадим каталог для работы с проектами mininet: mkdir ~/work. Для сохранения топологии сети в файл нажмём в MiniEdit “File”-“Save”. Укажем имя для топологии и сохраним на своём компьютере.

![Сохранение топологии](image/26.png){ #fig:026 width=100% height=100% }

После сохранения проекта поменяем права доступа к файлам в каталоге проекта.

![Изменение прав доступа к файлам в каталоге проекта](image/27.png){ #fig:027 width=100% height=100% }

# Вывод

В результате выполнения данной лабораторной работы я развёрнула mininet в системе виртуализации VirtualBox, а также ознакомилась с основными командами для работы с Mininet через командную строку и через графический интерфейс.

# Список литературы. Библиография

[1] Mininet [Электронный ресурс]. Mininet Project Contributors. URL: http://mininet.org/
